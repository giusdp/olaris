# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

version: '3'
tasks:
  
  default:
    silent: true
    cmds:
    - |
      if {{.__devcluster}} 
      then nuv setup devcluster
      fi
 
  configure:
    silent: true
    cmds:
    - |
      config CONFIG_CONTACT="{{._contact_}}"
      config CONFIG_APIHOST="${CONFIG_APIHOST:-auto}"
      config CONFIG_APIHOST=${CONFIG_APIHOST:-auto}
      config ENABLE_REDIS=${ENABLE_REDIS:-false}
      config ENABLE_MONGO=${ENABLE_MONGO:-false}
      config ENABLE_MINIO=${ENABLE_MINIO:-false}
      config ENABLE_CRON=${ENABLE_MINIO:-false}
      config ENABLE_STATIC=${ENABLE_STATIC:-false}
      
  apihost:
    silent: true
    cmds:
    - config CONFIG_APIHOST="{{._apihost_}}"

  enable:
    silent: true
    cmds:
    - |
      if {{.__redis}} || {{.__all}}
      then config ENABLE_REDIS=true
      fi
      if {{.__mongo}} || {{.__all}}
      then config ENABLE_MONGO=true
      fi
      if {{.__minio}} || {{.__all}}
      then config ENABLE_MINIO=true
      fi
      if {{.__cron}} || {{.__all}}
      then config ENABLE_CRON=true
      fi
      if {{.__cron}} || {{.__all}}
      then config ENABLE_STATIC=true
      fi
    - task: status

  disable:
    silent: true
    cmds:
    - |
      if {{.__redis}} || {{.__all}}
      then config.sh ENABLE_REDIS=false
      fi
      if {{.__mongo}} || {{.__all}}
      then config.sh ENABLE_MONGO=false
      fi
      if {{.__minio}} || {{.__all}}
      then config.sh ENABLE_MINIO=false
      fi
      if {{.__cron}} || {{.__all}}
      then config.sh ENABLE_CRON=false
      fi
      if {{.__cron}} || {{.__all}}
      then config.sh ENABLE_STATIC=false
      fi
    - task: status

  status:
    silent: true
    cmds:
    - |
      echo "*** Configuration ***"
      echo "     ApiHost: $CONFIG_APIHOST"
      echo "     Contact: $CONFIG_CONTACT"
      echo "       Redis: $ENABLE_REDIS"
      echo "     MongoDB: $ENABLE_MONGO"
      echo "       Minio: $ENABLE_MINIO"
      echo "        Cron: $ENABLE_CRON"
      echo "     Statics: $ENABLE_STATIC"
    - |
      if test -z "$CONFIG_CONTACT"
      then echo 'Please use "nuv setup configure" to configure contact and apihost'
           false
      fi


  use-context:
    silent: true
    cmds: 
    - |
      if test -n "{{._context_}}"
      then  if kubectl config use-context "{{._context_}}"
            then kubectl config get-contexts
            else false
            fi
      fi
      kubectl config get-contexts

  devcluster:
    silent: true
    cmds:
    - |
        nuv configure "no-reply@example.com"
        nuv setup docker create
        nuv setup kubernetes create

  cluster:
    silent: true
    cmds:
    - task: use-context
    - nuv setup kubernetes create
    - nuv setup nuvolaris login

  server:
    silent: true
    cmds:
    - nuv setup apihost {{._server_}}
    - nuv setup k3s create SERVER="{{._server_}}" USERNAME="{{._user_}}"
    - nuv setup kubernetes create
    - nuv setup nuvolaris login


  delete:
    silent: false
    cmds:
    - task: use-context
    - |
      if {{.__local}}
      then nuv setup docker delete
      elif {{.__server}}
      then nuv setup k3s delete
      else nuv setup kubernetes delete
      fi


