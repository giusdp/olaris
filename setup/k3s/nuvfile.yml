# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

version: '3'

vars:
  CERTMANAGER: "https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.yaml"

env:
  KUBECONFIG: 
    sh: |- 
        if test -e "$NUV_TMP/kubeconfig"
        then echo "$NUV_TMP/kubeconfig"
        else echo ~/kube/config
        fi
  SERVER: "{{or .SERVER  \"localhost\"}}"
  USERNAME: "{{or .USERNAME \"root\"}}"

tasks:

  get-cert-manager:
    cmds:
    - curl -L "{{.CERTMANAGER}}" >cert-manager.yaml


  install:
    silent: true
    desc: install k3s with ssh in SERVER=<server> using USERNAME=<user> with sudo
    cmds:
      - >
        k3sup install
        --host="$SERVER" --user="$USERNAME"
        --local-path=$NUV_TMP/kubeconfig
  
  cert-manager:
    silent: true
    desc: install cert-manager
    cmds:
      - kubectl --kubeconfig $NUV_TMP/kubeconfig apply -f cert-manager.yaml

  create:
    silent: true
    desc: create a k3s with ssh in SERVER=<server> using USERNAME=<user> with sudo
    cmds:
    - task: configure
    - task: install
    - task: cert-manager
  
  status:
    silent: true
    cmds:
    - kubectl get nodes

  delete:
    desc: uninstall with ssh in SERVER=<server> using USER=<user> with sudo
    cmds:
    - ssh -o StrictHostKeyChecking=no "$USERNAME@$SERVER" sudo /usr/local/bin/k3s-uninstall.sh
    - rm $NUV_TMP/kubeconfig
    - rm _server_
    ignore_error: true
  
  info:
    silent: true
    cmds:
    - echo KUBECONFIG="$KUBECONFIG"
    - echo SERVER="$SERVER"
    - echo USERNAME="$USERNAME"

  configure:
    desc: save configuration
    cmds:
    - |
      cat >_server_ <<EOF 
      SERVER={{.SERVER}}
      USERNAME={{.USERNAME}}
      EOF
    - nuv setup apihost "{{.SERVER}}"
