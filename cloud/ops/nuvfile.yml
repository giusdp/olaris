version: '3'

vars:
  NTFY_URL: https://github.com/binwiederhier/ntfy/releases/download/v2.7.0/ntfy_2.7.0_linux_{{ARCH}}.tar.gz
  NTFY: "$NUV_TMP/nuvops/ntfy"
  BASEDIR: /tmp/nuvops

tasks:

  setup:
    cmds:
    - test "{{OS}}" == "linux" || die "only for linux for now"
    - mkdir -p "$NUV_TMP/nuvops"
    - curl -sL "{{.NTFY_URL}}" | /usr/bin/tar xzvf - --strip-components=1 -C "$NUV_TMP/nuvops"
    status:
    - test -e "{{.NTFY}}"

######################

  upload-tasks:
    cmds:
    - test -d "$NUV_PWD/olaris-ops" || die "we need an olaris-ops folder in current directory"
    - |
      cd $NUV_PWD 
      /usr/bin/tar czvf $NUV_TMP/nuvops/olaris-ops.tgz olaris-ops
      md5sum $NUV_TMP/nuvops/olaris-ops.tgz | awk '{print $1}' >$NUV_TMP/nuvops/olaris-ops.curr
    - |
      export LAST="$(cat $NUV_TMP/nuvops/olaris-ops.last)"
      export CURR="$(cat $NUV_TMP/nuvops/olaris-ops.curr)"
      echo "CURR=$CURR LAST=$LAST"
      if test "$LAST" != "$CURR"
      then
        ntfy publish --token "$NUVOPS_TOKEN" --tags upload --file $NUV_TMP/nuvops/olaris-ops.tgz "$NUVOPS_TOPIC"
        cp $NUV_TMP/nuvops/olaris-ops.curr $NUV_TMP/nuvops/olaris-ops.last
      fi

  client:
    desc: client
    cmds:
    - task: setup
    - task: upload-tasks
    - > 
      ntfy publish
      --token "$NUVOPS_TOKEN"
      --title "{{or .T "*"}}"
      --tags command
      "$NUVOPS_TOPIC" "{{.CLI_ARGS}}"

  test: 
    cmds:
    - echo "[{{.HOSTNAME}}] {{.CLI_ARGS}}" 
    vars:
      HOSTNAME: '{{or .T "*"}}'

######################
 
  server:
    silent: true
    desc: server
    cmds:
    - test -n "{{.HOSTNAME}}" || die "no hostname specified - use HOSTNAME="
    - test -n "$NUVOPS_TOPIC" || die "configure NUVOPS_TOPIC"
    - test -n "$NUVOPS_TOKEN" || die "configure NUVOPS_TOKEN"
    - task: setup
    - echo "*** {{.HOSTNAME}} ***"
    - mkdir -p "{{.BASEDIR}}/{{.WORKDIR}}"
    - >
      {{.NTFY}} sub
      --token "$NUVOPS_TOKEN"
      "$NUVOPS_TOPIC" "nuv cloud ops on_message HOSTNAME={{.HOSTNAME}}"

  on_message:
    cmds:
    - task: on_{{.TAG}}
    vars:
      TAG:
        sh: echo "$NTFY_TAGS"

  on_upload:
    dir: "{{.BASEDIR}}/{{.HOSTNAME}}"
    silent: true
    cmds:
    - echo -n "[upload] files "
    - |
      URL="$(echo "$NTFY_RAW" | jq -r .attachment.url)"
      if curl -sL "$URL" -o _nuvops.tgz 
      then /usr/bin/tar xzvf _nuvops.tgz | wc -l
      else echo "ERROR!"
      fi

  on_command:
    dir: "{{.BASEDIR}}/{{.HOSTNAME}}"
    silent: true
    cmds:
    - | 
      #echo "Title $NTFY_TITLE {{.HOSTNAME}}"
      if [[ {{.HOSTNAME}} ==  $NTFY_TITLE ]]
      then echo "$NTFY_TITLE matched {{.HOSTNAME}}"
           nuv ops $NTFY_MESSAGE
      else echo "!!! $NTFY_TITLE did NOT match {{.HOSTNAME}}"
      fi 
    #- echo $(pwd) "[nuv ops $NTFY_MESSAGE]"
